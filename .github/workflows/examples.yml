on:
  push:
    branches:
      - main
    paths:
      - .github/**
      - examples/**
      - '!README.md'

env:
  MAIN_BRANCH_URL: "https://raw.githubusercontent.com/liquidcarbon/puppy/main/"
  PYTHONIOENCODING: "utf8"  # https://github.com/pallets/click/issues/2121

jobs:
  bash-generate-notebooks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up custom PATH
      run: echo "PATH=$HOME/.pixi/bin:$PATH" >> $GITHUB_ENV
    - name: Install puppy3.12
      run: cat pup.sh | bash -s 3.12
    - name: Install jupyter
      run: pixi add notebook nbclient
    - name: Run notebook demo
      run: examples/Q-strings/demo.sh
  
  win-generate-notebooks:
    runs-on: windows-latest
    steps:
    - name: Install puppy3.11
      run: |
        & ([scriptblock]::Create((iwr -useb $env:MAIN_BRANCH_URL/pup.ps1).Content)) 3.11
        pixi add notebook nbclient
    - name: Create pup alias, fetch environment, generate and run notebook
      run: |
        iex ((iwr $env:MAIN_BRANCH_URL/pup.ps1).Content -split "`n")[-2]
        pup fetch db duckdb pandas
        pup kernel db db-3.11
        $QUERY1=@'
        el='Ca'
        Q("""
        SELECT *
        FROM isotopes
        WHERE Symbol = '{el}'
        """, el=el).df()
        '@
        pup play `
          --kernel-name db-3.11 `
          -n qtest.ipynb `
          -c "md|# 🐶 generated this notebook from CLI" `
          -c $((iwr -useb $env:MAIN_BRANCH_URL/examples/Q-strings/Q.py).Content) `
          -c $QUERY1 `
          -E -N
        cat .\notebooks\qtest.ipynb
        # -replace '"', '\"' not needed?
  
  win-gradio:
    runs-on: windows-latest
    steps:
    - name: Install puppy3.11
      run: |
        & ([scriptblock]::Create((iwr -useb $env:MAIN_BRANCH_URL/pup.ps1).Content)) 3.11
    - name: Create alias and run a pup command
      run: |
        iex ((iwr $env:MAIN_BRANCH_URL/pup.ps1).Content -split "`n")[-2] ; pup fetch zero-to-gradio gradio
    - name: Start app
      run: >
        zero-to-gradio\.venv\Scripts\python.exe -c
        'import gradio as gr; gr.Interface(lambda x: x, inputs=["text"], outputs=["text"]).launch(prevent_thread_lock=1)'
